# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc
import warnings

import templates_pb2 as templates__pb2

GRPC_GENERATED_VERSION = '1.64.0'
GRPC_VERSION = grpc.__version__
EXPECTED_ERROR_RELEASE = '1.65.0'
SCHEDULED_RELEASE_DATE = 'June 25, 2024'
_version_not_supported = False

try:
    from grpc._utilities import first_version_is_lower
    _version_not_supported = first_version_is_lower(GRPC_VERSION, GRPC_GENERATED_VERSION)
except ImportError:
    _version_not_supported = True

if _version_not_supported:
    warnings.warn(
        f'The grpc package installed is at version {GRPC_VERSION},'
        + f' but the generated code in templates_pb2_grpc.py depends on'
        + f' grpcio>={GRPC_GENERATED_VERSION}.'
        + f' Please upgrade your grpc module to grpcio>={GRPC_GENERATED_VERSION}'
        + f' or downgrade your generated code using grpcio-tools<={GRPC_VERSION}.'
        + f' This warning will become an error in {EXPECTED_ERROR_RELEASE},'
        + f' scheduled for release on {SCHEDULED_RELEASE_DATE}.',
        RuntimeWarning
    )


class TemplatesStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.CreateLink = channel.unary_unary(
                '/TemplatesService.Templates/CreateLink',
                request_serializer=templates__pb2.FeatureLinkTemplateStruct.SerializeToString,
                response_deserializer=templates__pb2.IdStruct.FromString,
                _registered_method=True)
        self.DeleteLink = channel.unary_unary(
                '/TemplatesService.Templates/DeleteLink',
                request_serializer=templates__pb2.FeatureLinkTemplateStruct.SerializeToString,
                response_deserializer=templates__pb2.Empty.FromString,
                _registered_method=True)
        self.CreateTemplate = channel.unary_unary(
                '/TemplatesService.Templates/CreateTemplate',
                request_serializer=templates__pb2.TemplateStruct.SerializeToString,
                response_deserializer=templates__pb2.IdStruct.FromString,
                _registered_method=True)
        self.UpdateTemplate = channel.unary_unary(
                '/TemplatesService.Templates/UpdateTemplate',
                request_serializer=templates__pb2.TemplateStruct.SerializeToString,
                response_deserializer=templates__pb2.Empty.FromString,
                _registered_method=True)
        self.DeleteTemplate = channel.unary_unary(
                '/TemplatesService.Templates/DeleteTemplate',
                request_serializer=templates__pb2.IdStruct.SerializeToString,
                response_deserializer=templates__pb2.Empty.FromString,
                _registered_method=True)
        self.CreateFeature = channel.unary_unary(
                '/TemplatesService.Templates/CreateFeature',
                request_serializer=templates__pb2.FeatureStruct.SerializeToString,
                response_deserializer=templates__pb2.IdStruct.FromString,
                _registered_method=True)
        self.UpdateFeature = channel.unary_unary(
                '/TemplatesService.Templates/UpdateFeature',
                request_serializer=templates__pb2.FeatureStruct.SerializeToString,
                response_deserializer=templates__pb2.Empty.FromString,
                _registered_method=True)
        self.DeleteFeature = channel.unary_unary(
                '/TemplatesService.Templates/DeleteFeature',
                request_serializer=templates__pb2.IdStruct.SerializeToString,
                response_deserializer=templates__pb2.Empty.FromString,
                _registered_method=True)
        self.GetAllTemplates = channel.unary_unary(
                '/TemplatesService.Templates/GetAllTemplates',
                request_serializer=templates__pb2.Empty.SerializeToString,
                response_deserializer=templates__pb2.TemplatesList.FromString,
                _registered_method=True)
        self.GetFeaturesByTemplateId = channel.unary_unary(
                '/TemplatesService.Templates/GetFeaturesByTemplateId',
                request_serializer=templates__pb2.IdStruct.SerializeToString,
                response_deserializer=templates__pb2.FeaturesList.FromString,
                _registered_method=True)


class TemplatesServicer(object):
    """Missing associated documentation comment in .proto file."""

    def CreateLink(self, request, context):
        """Создание связи между фичами и шаблонами   
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteLink(self, request, context):
        """Удаление связи между таблицами
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateTemplate(self, request, context):
        """Создание нового шаблона
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateTemplate(self, request, context):
        """Редактирование шаблона
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteTemplate(self, request, context):
        """Удаление шаблона по id
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateFeature(self, request, context):
        """Создание фичи
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateFeature(self, request, context):
        """Редактирование фичи
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteFeature(self, request, context):
        """Удаление фичи
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetAllTemplates(self, request, context):
        """Получение всех шаблонов
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetFeaturesByTemplateId(self, request, context):
        """Получение фичи по айди шаблона
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_TemplatesServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'CreateLink': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateLink,
                    request_deserializer=templates__pb2.FeatureLinkTemplateStruct.FromString,
                    response_serializer=templates__pb2.IdStruct.SerializeToString,
            ),
            'DeleteLink': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteLink,
                    request_deserializer=templates__pb2.FeatureLinkTemplateStruct.FromString,
                    response_serializer=templates__pb2.Empty.SerializeToString,
            ),
            'CreateTemplate': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateTemplate,
                    request_deserializer=templates__pb2.TemplateStruct.FromString,
                    response_serializer=templates__pb2.IdStruct.SerializeToString,
            ),
            'UpdateTemplate': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateTemplate,
                    request_deserializer=templates__pb2.TemplateStruct.FromString,
                    response_serializer=templates__pb2.Empty.SerializeToString,
            ),
            'DeleteTemplate': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteTemplate,
                    request_deserializer=templates__pb2.IdStruct.FromString,
                    response_serializer=templates__pb2.Empty.SerializeToString,
            ),
            'CreateFeature': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateFeature,
                    request_deserializer=templates__pb2.FeatureStruct.FromString,
                    response_serializer=templates__pb2.IdStruct.SerializeToString,
            ),
            'UpdateFeature': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateFeature,
                    request_deserializer=templates__pb2.FeatureStruct.FromString,
                    response_serializer=templates__pb2.Empty.SerializeToString,
            ),
            'DeleteFeature': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteFeature,
                    request_deserializer=templates__pb2.IdStruct.FromString,
                    response_serializer=templates__pb2.Empty.SerializeToString,
            ),
            'GetAllTemplates': grpc.unary_unary_rpc_method_handler(
                    servicer.GetAllTemplates,
                    request_deserializer=templates__pb2.Empty.FromString,
                    response_serializer=templates__pb2.TemplatesList.SerializeToString,
            ),
            'GetFeaturesByTemplateId': grpc.unary_unary_rpc_method_handler(
                    servicer.GetFeaturesByTemplateId,
                    request_deserializer=templates__pb2.IdStruct.FromString,
                    response_serializer=templates__pb2.FeaturesList.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'TemplatesService.Templates', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('TemplatesService.Templates', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class Templates(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def CreateLink(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/TemplatesService.Templates/CreateLink',
            templates__pb2.FeatureLinkTemplateStruct.SerializeToString,
            templates__pb2.IdStruct.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def DeleteLink(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/TemplatesService.Templates/DeleteLink',
            templates__pb2.FeatureLinkTemplateStruct.SerializeToString,
            templates__pb2.Empty.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def CreateTemplate(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/TemplatesService.Templates/CreateTemplate',
            templates__pb2.TemplateStruct.SerializeToString,
            templates__pb2.IdStruct.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def UpdateTemplate(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/TemplatesService.Templates/UpdateTemplate',
            templates__pb2.TemplateStruct.SerializeToString,
            templates__pb2.Empty.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def DeleteTemplate(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/TemplatesService.Templates/DeleteTemplate',
            templates__pb2.IdStruct.SerializeToString,
            templates__pb2.Empty.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def CreateFeature(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/TemplatesService.Templates/CreateFeature',
            templates__pb2.FeatureStruct.SerializeToString,
            templates__pb2.IdStruct.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def UpdateFeature(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/TemplatesService.Templates/UpdateFeature',
            templates__pb2.FeatureStruct.SerializeToString,
            templates__pb2.Empty.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def DeleteFeature(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/TemplatesService.Templates/DeleteFeature',
            templates__pb2.IdStruct.SerializeToString,
            templates__pb2.Empty.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetAllTemplates(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/TemplatesService.Templates/GetAllTemplates',
            templates__pb2.Empty.SerializeToString,
            templates__pb2.TemplatesList.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetFeaturesByTemplateId(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/TemplatesService.Templates/GetFeaturesByTemplateId',
            templates__pb2.IdStruct.SerializeToString,
            templates__pb2.FeaturesList.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)
